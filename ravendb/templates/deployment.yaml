apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ravendb.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ravendb.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "ravendb.fullname" . }}
  selector:
    matchLabels:
      {{- include "ravendb.labels" . | nindent 6 }}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  replicas: {{ .Values.clusterSize }}
  template:
    metadata:
      labels:
        {{- include "ravendb.labels" . | nindent 8}} 
    spec:
      serviceAccountName: {{ include "ravendb.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - image: {{ .Values.image.repository }}:{{ .Values.image.tag | default (print .Chart.AppVersion "-ubuntu-latest") }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: ravendb
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command:  [ '/opt/RavenDB/Server/Raven.Server' ]
          env:
            - name: NODE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          # Load the correct config (generated in config.yaml)
          args: [ '--config-path=/config/$(NODE)', '--log-to-console' ]
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - containerPort: 443
              name: https
              protocol: TCP
            - containerPort: 38888
              name: tcp
              protocol: TCP
            - containerPort: 161
              name: snmp
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /license
              name: license
            - mountPath: /config
              name: config
            - mountPath: /tls
              name: tls
          livenessProbe:
            exec:
              command: [ 'curl', 'https://localhost/build/version', '-s', '--fail', '--insecure', '--cert', '/tls/tls.crt', '--key', '/tls/tls.key' ]
      volumes:
        - name: license
          secret:
            secretName: {{ include "ravendb.fullname" . }}-license
            defaultMode: 0440
        - name: config
          configMap:
            name: {{ include "ravendb.fullname" . }}-config
            defaultMode: 0440
        - name: tls
          secret:
            secretName: {{ include "ravendb.tls-secret" . }}
            defaultMode: 0440

      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end}}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "ravendb.labels" . | nindent 10 }}
        {{- with .Values.storage.annotations }}
        annotations:
          {{ toYaml . | nindent 10 }}
        {{- end}}
      spec:
        storageClassName: {{ .Values.storage.class }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.storage.size }}
          
          
  