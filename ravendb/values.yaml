# Default values for ravendb chart

clusterSize: 3

#Configure RavenDB public URLs
hosts: {}
#  '0': 
#    http: 'a.ravendb.local'
#    tcp: 'tcp-a.ravendb.local'
#  '1': 
#    http: 'b.ravendb.local'
#    tcp: 'tcp-b.ravendb.local'
#  '2': 
#    http: 'c.ravendb.local'
#    tcp: 'tcp-c.ravendb.local'

#YAML config (will be converted to JSON)
config:
  shared: {}
  '0': {}
  '1': {}
  '2': {}
    
# Specify ravendb license json
# Recommended to specify file on command line
# helm install ... --set-file license=license.json
license: ""


ingress:
  #If ingress class is not provided, it will be ignored
  class: "" 
  annotations: {}
    # kubernetes.io/ingress.class: haproxy
    # kubernetes.io/cluster-issuer: letsencrypt
  
  #If not specified, a secret name will be generated automatically
  tlsSecretName: ""

service:
  #Annotations to apply to services
  annotations: {}

storage:
  class: premium
  size: 100Gi
  annotations: {}

image:
  repository: ravendb/ravendb
  pullPolicy: IfNotPresent
  #If not specified, then [chartversion]-ubuntu-latest will be used
  tag: ""

imagePullSecrets: []

serviceAccount:
  create: true
  annotations: {}
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

#Specify pod resources
resources:
#  requests:
#    cpu: 100m
#    memory: 128Mi
#  limits:
#    cpu: 1
#    memory: 1Gi

terminationGracePeriodSeconds: 120

nodeSelector: {}

tolerations: []

affinity: {}